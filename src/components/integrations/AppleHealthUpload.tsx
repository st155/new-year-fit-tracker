import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Upload, FileX, CheckCircle, AlertTriangle } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { ErrorLogger } from '@/lib/error-logger';
import { supabase } from '@/integrations/supabase/client';
import { useAuth } from '@/hooks/useAuth';

interface AppleHealthUploadProps {
  onUploadComplete?: (data: any) => void;
}

export function AppleHealthUpload({ onUploadComplete }: AppleHealthUploadProps) {
  const { user } = useAuth();
  const { toast } = useToast();
  const [isUploading, setIsUploading] = useState(false);
  const [uploadProgress, setUploadProgress] = useState(0);
  const [uploadStatus, setUploadStatus] = useState<'idle' | 'uploading' | 'processing' | 'complete' | 'error'>('idle');
  const [uploadResult, setUploadResult] = useState<any>(null);

  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (–º–∞–∫—Å 500MB)
    const maxSize = 500 * 1024 * 1024; // 500MB –≤ –±–∞–π—Ç–∞—Ö
    if (file.size > maxSize) {
      await ErrorLogger.logFileUploadError(
        'Apple Health file too large',
        { 
          fileName: file.name, 
          fileSize: file.size, 
          maxSize,
          fileSizeMB: Math.round(file.size / 1024 / 1024)
        },
        user?.id
      );
      
      toast({
        title: '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π',
        description: `–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${Math.round(file.size / 1024 / 1024)}MB. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 500MB`,
        variant: 'destructive'
      });
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    if (!file.name.toLowerCase().endsWith('.zip')) {
      await ErrorLogger.logFileUploadError(
        'Invalid Apple Health file format',
        { fileName: file.name, fileType: file.type },
        user?.id
      );
      
      toast({
        title: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞',
        description: '–ó–∞–≥—Ä—É–∑–∏—Ç–µ ZIP-–∞—Ä—Ö–∏–≤ —ç–∫—Å–ø–æ—Ä—Ç–∞ Apple Health',
        variant: 'destructive'
      });
      return;
    }

    try {
      setIsUploading(true);
      setUploadStatus('uploading');
      setUploadProgress(0);

      // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
      const fileName = `apple-health-${Date.now()}-${file.name}`;
      const filePath = `${user?.id}/${fileName}`;

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Supabase Storage
      const { data: uploadData, error: uploadError } = await supabase.storage
        .from('apple-health-uploads')
        .upload(filePath, file);

      if (uploadError) {
        throw new Error(`Upload failed: ${uploadError.message}`);
      }

      setUploadProgress(50);
      setUploadStatus('processing');

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ Edge Function
      const { data: processData, error: processError } = await supabase.functions.invoke('process-apple-health', {
        body: {
          userId: user?.id,
          filePath: uploadData.path
        }
      });

      if (processError) {
        throw new Error(`Processing failed: ${processError.message}`);
      }

      setUploadProgress(100);
      setUploadStatus('complete');
      setUploadResult(processData);

      toast({
        title: '–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!',
        description: `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${processData.recordsProcessed || 0}`
      });

      onUploadComplete?.(processData);

    } catch (error: any) {
      console.error('Apple Health upload error:', error);
      
      await ErrorLogger.logFileUploadError(
        'Apple Health upload failed',
        { 
          fileName: file.name, 
          fileSize: file.size,
          error: error.message,
          stage: uploadStatus
        },
        user?.id
      );

      setUploadStatus('error');
      toast({
        title: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏',
        description: error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª Apple Health',
        variant: 'destructive'
      });
    } finally {
      setIsUploading(false);
    }
  };

  const resetUpload = () => {
    setUploadStatus('idle');
    setUploadProgress(0);
    setUploadResult(null);
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <div className="w-8 h-8 bg-gray-800 rounded flex items-center justify-center text-white font-bold text-sm">
            üçé
          </div>
          Apple Health Data
        </CardTitle>
        <CardDescription>
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö Apple Health –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –≤–∞—à–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∑–¥–æ—Ä–æ–≤—å—è
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        {uploadStatus === 'idle' && (
          <div className="space-y-4">
            <Alert>
              <AlertTriangle className="h-4 w-4" />
              <AlertDescription>
                <strong>–ö–∞–∫ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Apple Health:</strong>
                <ol className="list-decimal list-inside mt-2 space-y-1 text-sm">
                  <li>–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "–ó–¥–æ—Ä–æ–≤—å–µ" –Ω–∞ iPhone</li>
                  <li>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å (–≤–µ—Ä—Ö–Ω–∏–π –ø—Ä–∞–≤—ã–π —É–≥–æ–ª)</li>
                  <li>–í—ã–±–µ—Ä–∏—Ç–µ "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–¥–æ—Ä–æ–≤—å—è"</li>
                  <li>–î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —Å–µ–±–µ</li>
                  <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π ZIP-—Ñ–∞–π–ª —Å—é–¥–∞</li>
                </ol>
              </AlertDescription>
            </Alert>
            
            <div className="border-2 border-dashed border-muted-foreground/25 rounded-lg p-8 text-center">
              <input
                type="file"
                accept=".zip"
                onChange={handleFileUpload}
                className="hidden"
                id="apple-health-upload"
                disabled={isUploading}
              />
              <label
                htmlFor="apple-health-upload"
                className="cursor-pointer flex flex-col items-center gap-4"
              >
                <Upload className="h-12 w-12 text-muted-foreground" />
                <div>
                  <h3 className="font-medium">–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª Apple Health</h3>
                  <p className="text-sm text-muted-foreground mt-1">
                    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ ZIP-–∞—Ä—Ö–∏–≤ —ç–∫—Å–ø–æ—Ä—Ç–∞ (–º–∞–∫—Å. 500MB)
                  </p>
                </div>
                <Button type="button">
                  –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                </Button>
              </label>
            </div>
          </div>
        )}

        {(uploadStatus === 'uploading' || uploadStatus === 'processing') && (
          <div className="space-y-4">
            <div className="text-center">
              <h3 className="font-medium mb-2">
                {uploadStatus === 'uploading' ? '–ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª...' : '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ...'}
              </h3>
              <Progress value={uploadProgress} className="mb-2" />
              <p className="text-sm text-muted-foreground">
                {uploadProgress.toFixed(0)}%
              </p>
            </div>
            <Alert>
              <AlertTriangle className="h-4 w-4" />
              <AlertDescription>
                –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.
              </AlertDescription>
            </Alert>
          </div>
        )}

        {uploadStatus === 'complete' && uploadResult && (
          <div className="space-y-4">
            <Alert>
              <CheckCircle className="h-4 w-4" />
              <AlertDescription>
                <strong>–£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ!</strong>
                <ul className="mt-2 space-y-1 text-sm">
                  <li>‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {uploadResult.recordsProcessed || 0}</li>
                  <li>‚Ä¢ –ù–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π: {uploadResult.newMetrics || 0}</li>
                  <li>‚Ä¢ –û—à–∏–±–æ–∫: {uploadResult.errors || 0}</li>
                </ul>
              </AlertDescription>
            </Alert>
            <Button onClick={resetUpload} variant="outline" className="w-full">
              –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω —Ñ–∞–π–ª
            </Button>
          </div>
        )}

        {uploadStatus === 'error' && (
          <div className="space-y-4">
            <Alert variant="destructive">
              <FileX className="h-4 w-4" />
              <AlertDescription>
                –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —ç—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç Apple Health, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
              </AlertDescription>
            </Alert>
            <Button onClick={resetUpload} variant="outline" className="w-full">
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </Button>
          </div>
        )}
      </CardContent>
    </Card>
  );
}