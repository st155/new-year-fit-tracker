import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { useToast } from '@/hooks/use-toast';
import { supabase } from '@/integrations/supabase/client';
import { Loader2, Upload, Download, Heart, Activity } from 'lucide-react';

interface AppleHealthIntegrationProps {
  userId: string;
}

export function AppleHealthIntegration({ userId }: AppleHealthIntegrationProps) {
  const [isProcessing, setIsProcessing] = useState(false);
  const [selectedFile, setSelectedFile] = useState<File | null>(null);
  const { toast } = useToast();

  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      if (file.type === 'application/zip' || file.name.endsWith('.zip')) {
        setSelectedFile(file);
      } else {
        toast({
          title: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞',
          description: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ ZIP-—Ñ–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏–∑ Apple Health.',
          variant: 'destructive'
        });
      }
    }
  };

  const processAppleHealthData = async () => {
    if (!selectedFile) return;

    setIsProcessing(true);
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –æ–±—Ä–∞–±–æ—Ç–∫–∞ ZIP-—Ñ–∞–π–ª–∞
      // —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º XML –¥–∞–Ω–Ω—ã—Ö –∏ –∏—Ö –ø–∞—Ä—Å–∏–Ω–≥–æ–º
      
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–∞
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Apple Health –¥–∞–Ω–Ω—ã—Ö
      // –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –±—ã –∏–∑–≤–ª–µ–∫–ª–∏:
      const mockHealthData = [
        { type: 'steps', value: 8547, unit: 'steps', date: new Date().toISOString().split('T')[0] },
        { type: 'heart_rate', value: 72, unit: 'bpm', date: new Date().toISOString().split('T')[0] },
        { type: 'weight', value: 75.2, unit: 'kg', date: new Date().toISOString().split('T')[0] },
        { type: 'sleep', value: 7.5, unit: 'hours', date: new Date().toISOString().split('T')[0] }
      ];

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Edge Function  
      const { data, error } = await supabase.functions.invoke('process-apple-health', {
        body: {
          userId,
          healthData: mockHealthData,
          fileName: selectedFile.name
        }
      });

      if (error) throw error;

      toast({
        title: '–î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã',
        description: `–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${mockHealthData.length} –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∏–∑ Apple Health.`,
      });

      setSelectedFile(null);
      
    } catch (error) {
      console.error('Processing error:', error);
      toast({
        title: '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª Apple Health.',
        variant: 'destructive'
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <div className="w-8 h-8 bg-gray-800 rounded-lg flex items-center justify-center text-white font-bold text-sm">
            üçé
          </div>
          Apple Health
        </CardTitle>
        <CardDescription>
          –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ –∑–¥–æ—Ä–æ–≤—å–µ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è "–ó–¥–æ—Ä–æ–≤—å–µ" –Ω–∞ iPhone.
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="space-y-3">
          <div className="p-4 bg-blue-50 rounded-lg border border-blue-200">
            <h4 className="font-medium text-blue-900 mb-2">–ö–∞–∫ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ:</h4>
            <ol className="text-sm text-blue-800 space-y-1">
              <li>1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "–ó–¥–æ—Ä–æ–≤—å–µ" –Ω–∞ iPhone</li>
              <li>2. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å (–ø—Ä–∞–≤—ã–π –≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª)</li>
              <li>3. –í—ã–±–µ—Ä–∏—Ç–µ "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∑–¥–æ—Ä–æ–≤—å–µ"</li>
              <li>4. –î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–º</li>
              <li>5. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π ZIP-—Ñ–∞–π–ª –∑–¥–µ—Å—å</li>
            </ol>
          </div>

          <div className="space-y-2">
            <Label htmlFor="apple-health-file">–í—ã–±–µ—Ä–∏—Ç–µ ZIP-—Ñ–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞</Label>
            <Input
              id="apple-health-file"
              type="file"
              accept=".zip"
              onChange={handleFileSelect}
              disabled={isProcessing}
            />
          </div>

          {selectedFile && (
            <div className="p-3 bg-green-50 rounded-lg border border-green-200">
              <div className="flex items-center gap-2">
                <Upload className="w-4 h-4 text-green-600" />
                <span className="text-sm font-medium text-green-800">
                  {selectedFile.name}
                </span>
                <Badge variant="secondary" className="ml-auto">
                  {(selectedFile.size / (1024 * 1024)).toFixed(1)} MB
                </Badge>
              </div>
            </div>
          )}

          <Button 
            onClick={processAppleHealthData}
            disabled={!selectedFile || isProcessing}
            className="w-full"
          >
            {isProcessing ? (
              <>
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...
              </>
            ) : (
              <>
                <Download className="mr-2 h-4 w-4" />
                –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
              </>
            )}
          </Button>

          <div className="text-xs text-muted-foreground space-y-1">
            <p>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ: —à–∞–≥–∏, –ø—É–ª—å—Å, —Å–æ–Ω, –≤–µ—Å, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</p>
            <p>‚Ä¢ –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è</p>
            <p>‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–∏–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—Ä–∏–∏</p>
          </div>
        </div>

        <div className="mt-4 p-3 bg-yellow-50 rounded-lg border border-yellow-200">
          <div className="flex items-start gap-2">
            <Activity className="w-4 h-4 text-yellow-600 mt-0.5" />
            <div className="text-sm">
              <p className="font-medium text-yellow-900 mb-1">–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
              <p className="text-yellow-800">
                –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Apple Health –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö.
                –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –∏–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π.
              </p>
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}